<%- include('partials/header', { title: 'Shopping Cart' }) %>
<%- include('partials/navbar') %>

<main class="container">
  <div class="cart-header">
    <h1 class="page-title">Shopping Cart</h1>
    <div class="cart-summary">
      <span class="item-count"><%= cartItems.length %> item(s) in cart</span>
    </div>
  </div>

  <% if (cartItems && cartItems.length > 0) { %>
    <div class="cart-container">
      <div class="cart-items">
        <% cartItems.forEach((item, index) => { %>
          <div class="cart-item" data-product-id="<%= item.product._id %>">
            <div class="item-image">
              <img src="<%= item.product.image %>" alt="<%= item.product.name %>">
            </div>
            
            <div class="item-details">
              <h3 class="item-name">
                <a href="/product/<%= item.product._id %>"><%= item.product.name %></a>
              </h3>
              <p class="item-brand"><%= item.product.brand %></p>
              <div class="item-price">
                <span class="current-price">$<%= item.product.price.toFixed(2) %></span>
                <% if (item.product.originalPrice && item.product.originalPrice > item.product.price) { %>
                  <span class="original-price">$<%= item.product.originalPrice.toFixed(2) %></span>
                <% } %>
              </div>
            </div>

            <div class="item-quantity">
              <button class="quantity-btn minus" data-action="decrease">-</button>
              <input type="number" class="quantity-input" value="<%= item.quantity %>" min="1" max="99">
              <button class="quantity-btn plus" data-action="increase">+</button>
            </div>

            <div class="item-total">
              <span class="total-price">$<%= (item.product.price * item.quantity).toFixed(2) %></span>
            </div>

            <div class="item-actions">
              <button class="btn-remove" data-product-id="<%= item.product._id %>" title="Remove item">
                <i class="fas fa-trash"></i>
              </button>
              <button class="btn-wishlist-cart <%= (locals.user && user.wishlist.includes(item.product._id)) ? 'active' : '' %>" 
                      data-product-id="<%= item.product._id %>" title="Add to Wishlist">
                <i class="fas fa-heart"></i>
              </button>
            </div>
          </div>
        <% }) %>
      </div>

      <div class="cart-summary-panel">
        <div class="summary-card">
          <h3>Order Summary</h3>
          
          <div class="summary-line">
            <span>Subtotal (<%= cartItems.length %> items)</span>
            <span class="subtotal">$<%= subtotal.toFixed(2) %></span>
          </div>
          
          <div class="summary-line">
            <span>Shipping</span>
            <span class="shipping">
              <% if (subtotal >= 50) { %>
                <span class="free-shipping">FREE</span>
              <% } else { %>
                $9.99
              <% } %>
            </span>
          </div>
          
          <div class="summary-line">
            <span>Tax</span>
            <span class="tax">$<%= tax.toFixed(2) %></span>
          </div>
          
          <div class="summary-line total">
            <span>Total</span>
            <span class="total-amount">$<%= total.toFixed(2) %></span>
          </div>

          <div class="checkout-actions">
            <a href="/checkout" class="btn-checkout">
              <i class="fas fa-lock"></i>
              Proceed to Checkout
            </a>
            <a href="/products" class="btn-continue-shopping">
              <i class="fas fa-arrow-left"></i>
              Continue Shopping
            </a>
          </div>

          <div class="security-badges">
            <div class="badge">
              <i class="fas fa-shield-alt"></i>
              <span>Secure Checkout</span>
            </div>
            <div class="badge">
              <i class="fas fa-truck"></i>
              <span>Free Shipping on $50+</span>
            </div>
            <div class="badge">
              <i class="fas fa-undo"></i>
              <span>30-Day Returns</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  <% } else { %>
    <div class="empty-cart">
      <div class="empty-cart-icon">
        <i class="fas fa-shopping-cart"></i>
      </div>
      <h2>Your cart is empty</h2>
      <p>Looks like you haven't added any items to your cart yet.</p>
      <a href="/products" class="btn-shop-now">
        <i class="fas fa-shopping-bag"></i>
        Start Shopping
      </a>
    </div>
  <% } %>
</main>

<%- include('partials/footer') %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Quantity controls
  document.querySelectorAll('.quantity-btn').forEach(btn => {
    btn.addEventListener('click', async function() {
      const action = this.dataset.action;
      const productId = this.closest('.cart-item').dataset.productId;
      const quantityInput = this.parentElement.querySelector('.quantity-input');
      let newQuantity = parseInt(quantityInput.value);
      
      if (action === 'increase') {
        newQuantity = Math.min(99, newQuantity + 1);
      } else if (action === 'decrease') {
        newQuantity = Math.max(1, newQuantity - 1);
      }
      
      await updateCartItem(productId, newQuantity);
    });
  });

  // Quantity input change
  document.querySelectorAll('.quantity-input').forEach(input => {
    input.addEventListener('change', async function() {
      const productId = this.closest('.cart-item').dataset.productId;
      const newQuantity = Math.max(1, Math.min(99, parseInt(this.value)));
      await updateCartItem(productId, newQuantity);
    });
  });

  // Remove item
  document.querySelectorAll('.btn-remove').forEach(btn => {
    btn.addEventListener('click', async function() {
      const productId = this.dataset.productId;
      await removeFromCart(productId);
    });
  });

  // Add to wishlist from cart
  document.querySelectorAll('.btn-wishlist-cart').forEach(btn => {
    btn.addEventListener('click', async function() {
      const productId = this.dataset.productId;
      
      try {
        const response = await fetch(`/wishlist/toggle/${productId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        
        const data = await response.json();
        if (data.success) {
          this.classList.toggle('active');
        }
      } catch (error) {
        console.error('Error toggling wishlist:', error);
      }
    });
  });

  async function updateCartItem(productId, quantity) {
    try {
      const response = await fetch('/cart/update', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, quantity })
      });
      
      if (response.ok) {
        location.reload(); // Refresh to update totals
      }
    } catch (error) {
      console.error('Error updating cart:', error);
    }
  }

  async function removeFromCart(productId) {
    try {
      const response = await fetch('/cart/remove', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId })
      });
      
      if (response.ok) {
        location.reload();
      }
    } catch (error) {
      console.error('Error removing from cart:', error);
    }
  }
});
</script>